# Site
repository: sproogen/resume-theme
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: Tae Yeon Hwang
title: Junior Web Developer
email: gxd0214@gmail.com
# website: https://github.com/BigHwangTaeYeon/bighwangtaeyeon.github.io

# Dark Mode (true/false/never)
darkmode: never
 
# Social links
# twitter_username: facespics
github_username:  BigHwangTaeYeon
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
# instagram_username: jameswgrant
linkedin_username: 태연-황-b42900281
# xing_username: jekyll
# pinterest_username: jekyll
# youtube_username: globalmtb
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
# additional_links:
# - title: itsgoingto.be
#   icon: fas fa-globe
#   url: https://www.itsgoingto.be
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
about_title: About Me
# about_profile_image: images/profile.jpg
about_content: | # this will include new lines to allow paragraphs
  중소기업에서 풀스택으로 웹 서비스를 개발/배포/운영을 담당했습니다. 주요 업무를 완료한 후, 제품의 개선이 필요한 부분을 최적화했습니다.<br>
  신기술을 배우고 비효율적인 부분을 개선하는 것을 좋아합니다. 비효율적인 배포 과정을 자동화하여 배포 시스템을 구축한 경험이 있습니다.

#  I am most skilled in: <mark>AWS</mark> and <mark>Eating Pizza</mark>

content:
  - title: Side Projects
    layout: list
    content:
      - layout: left
        title: 멍모
        link: https://github.com/BigHwangTaeYeon/MungMo
        caption: 2024.06.21 ~
        quote: >
          견주 모임 서비스 개발 (백엔드 개발)
        description: | # this will include new lines to allow paragraphs
          Restful API 구현<br>
          MSA 아키텍쳐 구축<br>
          kafka connector 를 통한 데이터베이스 동기화<br>
          kafka 를 이용한 대규모 분산 처리 채팅 서비스 구현<br>
          <br>
          기술 스택<br>
            Java, Spring Boot, Spring Cloud, WebSocket<br>
            MySQL, MongoDB, kafka
          <br><br>

          <mark>상황</mark> : 
            도메인 기준으로 어플리케이션을 나누어 구축하고 데이터베이스를 하나로 사용하기에는 MSA 의 목적인 낮은 결합도를 구성하지 못한다 생각하였습니다.<br>
            데이터베이스를 분리하였더니 각 서비스의 데이터 동기화가 필요했습니다.<br>
            또한 각 서비스간 통신이 정말 필요없을까 라는 궁금증이 생겼습니다.<br>
          <mark>실행</mark> : 
            비동기, 분산처리, 스트리밍의 장점을 가진 카프카를 택하였고, 카프카 커넥터를 통해 동기화를 구축했습니다.<br>
            동기화를 해도 순간에 차이가 생기면 데이터 정합성이 깨질 수 있다는 생각이 들었습니다.<br>
            해당 유저의 정확한 매너 점수를 얻고 부여할 수 있도록 FeignClient 를 이용해 통신을 하였습니다.<br>
          <mark>결과</mark> : 
            데이터를 동기화하여 필요에 따라 다른 데이터베이스의 데이터를 쉽게 얻을 수 있었고<br>
            데이터 정합성이 중요한 부분은 통신으로 데이터를 가져와 문제 없이 처리하였습니다.<br>

          <mark>상황</mark> : 
            채팅 서비스를 구현하며 메세지를 저장하고 발행한 회원의 정보와 같이 메세지츨 출력해야하며<br>
            휴대폰 앱 사용자에게 알림을 저장하고 전송해야하는데,<br>
            매번 메세지 한번 보낼 때 마다 웹소켓 하나로 모두 처리하는 것이 걱정되었습니다.<br>
          <mark>실행</mark> : 
            웹소켓으로 메세지가 들어오면 두 개의 kafka producer에 저장하고 consumer 로 메세지가 들어오면 로직을 처리할 수 있도록 구현하였습니다.<br>
          <mark>결과</mark> : 
            하나의 메세지에 처리할 로직이 많고 다수의 사용자가 가볍게 사용되는 메세지의 무게를 낮출 수 있었습니다.<br>

      - title: 어떡
        link: https://www.utteok.com https://github.com/Utteok/Type-of-Tteokbokki_Back
        caption: 2024.02 ~ 2024.02
        quote: >
          떡볶이 추천 서비스 백엔드 개발 담당 (기획자 1, 디자인 1, 프론트 1, 백엔드 1)
        description: | # this will include new lines to allow paragraphs
          Restful API 구현<br>
          레디스를 활용한 API 캐싱<br>
          Mybatis -> JPA 마이그레이션<br>
          Jenkins 파이프라인(빌드, 테스트, 배포 환경) 구축<br>
          TDD 활용 (service layer)<br>
          <br>
          기술 스택<br>
            Java, Spring Boot, MariaDB, Redis<br>
            Junit5, JPA, Jenkins, Naver Cloud Platform, Nginx
          <br><br>
          
          <mark>상황</mark> : CI/CD 도구로 Jenkins를 택하였습니다.
          <br>
          <mark>실행</mark> : Stage 구성은 Git clone > Build > Backup > ProcessKill > Deploy로 진행하였다.
          <br>
          <mark>결과</mark> : Main branch에서 병합 PUSH 하여 Webhook으로 배포를 진행하도록 설계하였다.
          <br>

          <mark>상황</mark> : Jenkins 배포 권한 문제 발생하였습니다.
          <br>
          <mark>실행</mark> : 배포 및 백업에 사용될 폴더의 소유자를 jenkins로 변경하고 권한을 주었습니다.
          <br>
          <mark>결과</mark> : 배포 및 백업을 진행할 수 있었습니다.
          <br>

          <mark>상황</mark> : CPU 1개, 메모리 1GB, 디스크 50GB 서버로 시작하고 젠킨스, 도커를 사용하는데 CPU와 MEM가 100%로 솟구쳤습니다.
          <br>
          <mark>실행</mark> : 
            1) 디스크는 많이 남아 swap 으로 처리했지만 문제가 있어서 젠킨스만 사용하기로 결정<br>
            2) 젠킨스 설정 후 배포 시, 서버가 다운되거나 nohup이 내려갔다. 결국 서버 스케일 업 결정.
          <br>
          <mark>결과</mark> : CPU 2, MEM 4, DISK 50으로 결정, 기존 서버는 테스트서버 새로 생성한 서버는 운영서버로 구분
          <br>

          <mark>상황</mark> : 리액트 > NGINX > Spring 으로 설계를 하였고, 리액트에서 스프링에 접근하는데 CORS 에러가 문제가 되었습니다.
          <br>
          <mark>실행</mark> : 
            1) Nginx에서 클라이언트가 /api 엔드포인트로 데이터를 요청하면 8080을 호출하도록 프록시 설정을 하였습니다.<br>
            2) spring에서는 @CrossOrigin 어노테이션에서 해당 origin 을 설정하여 허가를 해주었습니다.<br>
            3) allowCredentials=true 로 함으로 origin 을 모두 허용(*)하는 것을 방지하였습니다.
          <br>
          <mark>결과</mark> : 문제없이 개발 및 운영을 하였습니다.
          <br>

  - title: Projects
    layout: list
    content:
      # - layout: left
      #   title: 디엑스웨이브
      #   # link: https://archive.gugak.go.kr/
      #   sub_title: Junior Web Developer
      #   caption: 2024.06 ~
      #   description: | # this will include new lines to allow paragraphs

      - title: 제이케이데이터시스템즈
        link: https://archive.gugak.go.kr/
        sub_title: Junior Web Developer
        caption: 2023.04 ~ 2023.12
        description: | # this will include new lines to allow paragraphs
          국악원 아카이브 서비스/관리 시스템 개발/배포/운영<br>
          아카이브 시스템 담당
          <br><br>
          빌드 배포 자동화<br>
          프록시 파일 생성 시, 문제 식별 및 개선<br>
          전자계약서 솔루션 연계<br>
          전자 계약서 연계, 운영 환경에서 NoSuchAlgorithmException 문제 해결<br>
          전자정부 프레임워크, Cubrid 환경 개발 경험<br>
          검색엔진 뷰 테이블 분석<br>
          공공데이터 품질관리 수준 평가<br>
          계약서 열람 및 다운로드 이력 AOP로 모듈화
          <br><br>
          기술 스택
            - Java, 전자정부 프레임워크, MyBatis, Cubrid
            - Jenkins, SVN
      - title: 펌프킨
        # link: www.nhncloud.com/kr
        sub_title: Junior Web Developer
        caption: 2022.10 ~ 2023.02
        description: | # this will include new lines to allow paragraphs
          전기차 중전기 제조업체, 통합 관리 시스템 개발<br>
          인증카드, 요금 부가, 충전 이력 페이지 개발
          <br><br>
          기술 스택
            - Java, Spring, MS-SQL, MyBatis
  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: 빌드 배포 자동화
        # sub_title: Senior Network System Administrator
        # caption: November 2017 - Present
        # quote: >
        #   배포 시, FTP를 통해 class 파일을 직접 올리는 방식을 사용해왔습니다. 휴먼 에러와 개발 비용이 많이 소모되는 것을 확인했습니다.
        description: | # this will include new lines to allow paragraphs
            <mark>상황</mark> : 배포 시, FTP를 통해 class 파일을 직접 올리는 방식을 사용해왔습니다. 휴먼 에러와 개발 비용이 소모되는 것을 확인했습니다.<br>
            <mark>실행</mark> : 배포 자동화 도구인 Jenkins 를 통해 파이프라인을 구축했습니다. Stage는 빌드 - 백업 - 배포로 구성하였습니다.<br>
            <mark>결과</mark> : 빌드 에러를 젠킨스가 알려주고, 많은 시간과 휴먼 에러를 줄일 수 있었습니다.
      - title: 프록시 파일 생성 문제 식별 및 개선
        description: | # this will include new lines to allow paragraphs
            <mark>상황</mark> : 
              영상, 음향를 프록시 파일로 경량화하여 서비스합니다. 다수의 파일을 생성할 때 서버가 다운되는 문제가 발생했습니다.<br>
              setTimeOut으로 서버에서 상태값을 재요청하는 방식으로 동작합니다.<br>
              5개의 파일을 진행하면 5개의 상태값을 확인하고 5번 호출을 합니다. 이 과정에서 요청 횟수를 배수로 보내 과부하가 걸리는 것을 확인하였습니다.<br>
            <mark>실행</mark> : 
              1) 일단 상태값을 배열로 담아 한번의 요청만 보내는 것으로 수정하였습니다.<br>
              2) 실시간으로 빠른 리소스의 변경이 좋다 생각되여 polling에서 websocket 으로 개선하였습니다.<br>
            <mark>결과</mark> : 다수의 파일을 작업해도 정상적으로 프록시 파일을 생성하는 것을 확인하였습니다.
      - title: 전자계약서 솔루션 연계
        description: | # this will include new lines to allow paragraphs
            <mark>상황</mark> : 계약서를 수기로 작성하여 직접 올린던 것을 솔루션을 통해 자동으로 업로드하는 연계 작업을 진행하였습니다.<br>
            <mark>실행</mark> : 계약서 상태 값에 따른 이력 테이블, webhook 이력 테이블, 계약서 파일 테이블을 설계하였습니다. 상태값에 따른 데이터 저장은 스테이트 패턴으로 설계하였습니다. 단일 책임 원칙에 따라 파일 다운로드, 토큰 생성, 토큰 검증, 통신 기능의 Class를 분리하였습니다<br>
            <mark>결과</mark> : 전자계약서 상태값에 따라 webhook 이벤트로 정상적으로 테이블에 저장되고, 완료된 계약서 파일이 저장되었습니다.
      - title: NotFoundClassException 문제 해결
        description: | # this will include new lines to allow paragraphs
            <mark>상황</mark> : 솔루션 연계 작업을 로컬, 개발에서 테스트를 완료하고 운영 서버에 배포하였습니다. 업체에서 제공하는 코드에서 ECKeyFactory not available 오류가 발생하였습니다.<br>
            <mark>실행</mark> : 운영 환경과의 차이점은 JDK 버전으로 확인하였고 이것을 중심으로 해결책을 찾았습니다. keyFactory class 에 ECKeyFactory 인스턴스를 주입해줘야 사용할 수 있다는 것을 확인하였습니다.<br>
            <mark>결과</mark> : 정상적인 작동을 확인하고 업체에서는 그럴리 없다는 답변만 들었던 상황이라 더 확인해본 결과, 썬 마이크로시스템즈가 오라클에 인수되며 해당 JDK는 sun 패키지가 제공되지 않는 것을 확인하고 Oracle에서 sun 패키지는 사용을 추천하지 않는다는 것을 확인하게 되었습니다.

  - title: Skill # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Backend
        description: |
            - Java, Spring Boot, Spring
            - Spring MVC, Spring Security, Spring Data JPA/Redis, Spring Cloud
            - Eclipse, Intellij
      - title: DevOps
        description: |
            - Cubrid, MySql, Redis, MongoDB
            - Jenkins, Git, Docker, Kafka
      - title: Frontend
        description: |
            - JSP, Thymeleaf, Java Script
  # - title: A Little More About Me
  #   layout: text
  #   content: |
  #     - [학습](https://github.com/BigHwangTaeYeon/book_cs)

  #     Look at this cool image  
  #     ![Trees](/modern-resume-theme/images/landscape-trees.jpg "Trees")
# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
